<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <RootNamespace>AuthorizationServer</RootNamespace>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(RunConfiguration)' == 'AuthorizationServer' ">
    <StartAction>Project</StartAction>
    <ApplicationURL>https://localhost:5001;http://localhost:5000</ApplicationURL>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    <PackageReference Include="IdentityServer4" Version="3.1.2" />
    <PackageReference Include="MongoDB.Bson" Version="2.10.2" />
    <PackageReference Include="MongoDB.Driver" Version="2.10.2" />
    <PackageReference Include="MediatR" Version="8.0.1" />
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="8.0.0" />
    <PackageReference Include="Rebus" Version="6.1.0" />
    <PackageReference Include="Rebus.MongoDb" Version="6.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.0.0" />
    <PackageReference Include="AutoMapper" Version="9.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.2" />
    <PackageReference Include="Rebus.ServiceProvider" Version="5.0.2" />
    <PackageReference Include="Rebus.RabbitMq" Version="6.0.0" />
    <PackageReference Include="IdentityServer4.AspNetIdentity" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Versioning" Version="4.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.2" />
    <PackageReference Include="MongoDB.Driver.Core" Version="2.10.2" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="Resources\Resources.SharedResource.fr" />
    <Content Remove="mono_crash.42f6ec13c.0.json" />
    <Content Remove="mono_crash.42f6ec13c.0.json" />
    <Content Remove="wwwroot\css\style.css" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Infrastructure\" />
    <Folder Include="Models\" />
    <Folder Include="Infrastructure\Authorization\" />
    <Folder Include="Resources\" />
    <Folder Include="Views\Account\" />
    <Folder Include="Views\Manage\" />
    <Folder Include="Views\Shared\" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Infrastructure\Storage\AzureStorageManager.cs" />
    <Compile Remove="SharedResources.Designer.cs" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Resources\Resources.SharedResource.Designer.cs">
      <DependentUpon>Resources.SharedResource.fr.resx</DependentUpon>
    </Compile>
    <Compile Condition=" '$(EnableDefaultCompileItems)' == 'true' " Update="Resources\Resources.SharedResource.fr.Designer.cs">
      <DependentUpon>Resources.SharedResource.fr.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Condition=" '$(EnableDefaultEmbeddedResourceItems)' == 'true' " Update="Resources\Resources.SharedResource.fr.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.SharedResource.fr.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
